// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.6.1
// source: reportcomm/report.proto

package reportcomm

import (
	context "context"
	activitycomm "github.com/FrancescoIlario/usplay/pkg/services/activitycomm"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// The request message containing the report details
type CreateReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Period *Interval `protobuf:"bytes,2,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *CreateReportRequest) Reset() {
	*x = CreateReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportRequest) ProtoMessage() {}

func (x *CreateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportRequest.ProtoReflect.Descriptor instead.
func (*CreateReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReportRequest) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

// The response message containing the id of the report
type CreateReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateReportReply) Reset() {
	*x = CreateReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportReply) ProtoMessage() {}

func (x *CreateReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportReply.ProtoReflect.Descriptor instead.
func (*CreateReportReply) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReportReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The request message for the read request
type ReadReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ReadReportRequest) Reset() {
	*x = ReadReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReportRequest) ProtoMessage() {}

func (x *ReadReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReportRequest.ProtoReflect.Descriptor instead.
func (*ReadReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{2}
}

func (x *ReadReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the read request
type ReadReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report *Report `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *ReadReportReply) Reset() {
	*x = ReadReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReportReply) ProtoMessage() {}

func (x *ReadReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReportReply.ProtoReflect.Descriptor instead.
func (*ReadReportReply) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{3}
}

func (x *ReadReportReply) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

// The request message for the delete request
type DeleteReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteReportRequest) Reset() {
	*x = DeleteReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReportRequest) ProtoMessage() {}

func (x *DeleteReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReportRequest.ProtoReflect.Descriptor instead.
func (*DeleteReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the delete request
type DeleteReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReportReply) Reset() {
	*x = DeleteReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReportReply) ProtoMessage() {}

func (x *DeleteReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReportReply.ProtoReflect.Descriptor instead.
func (*DeleteReportReply) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{5}
}

// The request message for the update request
type UpdateReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *UpdateReportRequest) Reset() {
	*x = UpdateReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportRequest) ProtoMessage() {}

func (x *UpdateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportRequest.ProtoReflect.Descriptor instead.
func (*UpdateReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateReportRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateReportRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// The response message to the update request.
// Returns the old values for the Report
type UpdateReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateReportReply) Reset() {
	*x = UpdateReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportReply) ProtoMessage() {}

func (x *UpdateReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportReply.ProtoReflect.Descriptor instead.
func (*UpdateReportReply) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{7}
}

// The request message for the list reports request
type ListReportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListReportsRequest) Reset() {
	*x = ListReportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportsRequest) ProtoMessage() {}

func (x *ListReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportsRequest.ProtoReflect.Descriptor instead.
func (*ListReportsRequest) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{8}
}

// The response message to the list reports request.
type ListReportsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports []*Report `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
}

func (x *ListReportsReply) Reset() {
	*x = ListReportsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportsReply) ProtoMessage() {}

func (x *ListReportsReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportsReply.ProtoReflect.Descriptor instead.
func (*ListReportsReply) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{9}
}

func (x *ListReportsReply) GetReports() []*Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string                   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	OrderId    string                   `protobuf:"bytes,3,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	Period     *Interval                `protobuf:"bytes,4,opt,name=Period,proto3" json:"Period,omitempty"`
	Activities []*activitycomm.Activity `protobuf:"bytes,5,rep,name=Activities,proto3" json:"Activities,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{10}
}

func (x *Report) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Report) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Report) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Report) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *Report) GetActivities() []*activitycomm.Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamp.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reportcomm_report_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_reportcomm_report_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_reportcomm_report_proto_rawDescGZIP(), []int{11}
}

func (x *Interval) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Interval) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

var File_reportcomm_report_proto protoreflect.FileDescriptor

var file_reportcomm_report_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x23, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x6f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22,
	0xac, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x66,
	0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x32, 0xb1, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x76, 0x63, 0x12, 0x4a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0e, 0x48, 0x03, 0x5a, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6d, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_reportcomm_report_proto_rawDescOnce sync.Once
	file_reportcomm_report_proto_rawDescData = file_reportcomm_report_proto_rawDesc
)

func file_reportcomm_report_proto_rawDescGZIP() []byte {
	file_reportcomm_report_proto_rawDescOnce.Do(func() {
		file_reportcomm_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_reportcomm_report_proto_rawDescData)
	})
	return file_reportcomm_report_proto_rawDescData
}

var file_reportcomm_report_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_reportcomm_report_proto_goTypes = []interface{}{
	(*CreateReportRequest)(nil),   // 0: reportcomm.CreateReportRequest
	(*CreateReportReply)(nil),     // 1: reportcomm.CreateReportReply
	(*ReadReportRequest)(nil),     // 2: reportcomm.ReadReportRequest
	(*ReadReportReply)(nil),       // 3: reportcomm.ReadReportReply
	(*DeleteReportRequest)(nil),   // 4: reportcomm.DeleteReportRequest
	(*DeleteReportReply)(nil),     // 5: reportcomm.DeleteReportReply
	(*UpdateReportRequest)(nil),   // 6: reportcomm.UpdateReportRequest
	(*UpdateReportReply)(nil),     // 7: reportcomm.UpdateReportReply
	(*ListReportsRequest)(nil),    // 8: reportcomm.ListReportsRequest
	(*ListReportsReply)(nil),      // 9: reportcomm.ListReportsReply
	(*Report)(nil),                // 10: reportcomm.Report
	(*Interval)(nil),              // 11: reportcomm.Interval
	(*activitycomm.Activity)(nil), // 12: activitycomm.Activity
	(*timestamp.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_reportcomm_report_proto_depIdxs = []int32{
	11, // 0: reportcomm.CreateReportRequest.Period:type_name -> reportcomm.Interval
	10, // 1: reportcomm.ReadReportReply.report:type_name -> reportcomm.Report
	10, // 2: reportcomm.ListReportsReply.reports:type_name -> reportcomm.Report
	11, // 3: reportcomm.Report.Period:type_name -> reportcomm.Interval
	12, // 4: reportcomm.Report.Activities:type_name -> activitycomm.Activity
	13, // 5: reportcomm.Interval.from:type_name -> google.protobuf.Timestamp
	13, // 6: reportcomm.Interval.to:type_name -> google.protobuf.Timestamp
	0,  // 7: reportcomm.ReportSvc.Create:input_type -> reportcomm.CreateReportRequest
	2,  // 8: reportcomm.ReportSvc.Read:input_type -> reportcomm.ReadReportRequest
	4,  // 9: reportcomm.ReportSvc.Delete:input_type -> reportcomm.DeleteReportRequest
	8,  // 10: reportcomm.ReportSvc.List:input_type -> reportcomm.ListReportsRequest
	1,  // 11: reportcomm.ReportSvc.Create:output_type -> reportcomm.CreateReportReply
	3,  // 12: reportcomm.ReportSvc.Read:output_type -> reportcomm.ReadReportReply
	5,  // 13: reportcomm.ReportSvc.Delete:output_type -> reportcomm.DeleteReportReply
	9,  // 14: reportcomm.ReportSvc.List:output_type -> reportcomm.ListReportsReply
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_reportcomm_report_proto_init() }
func file_reportcomm_report_proto_init() {
	if File_reportcomm_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reportcomm_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reportcomm_report_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reportcomm_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reportcomm_report_proto_goTypes,
		DependencyIndexes: file_reportcomm_report_proto_depIdxs,
		MessageInfos:      file_reportcomm_report_proto_msgTypes,
	}.Build()
	File_reportcomm_report_proto = out.File
	file_reportcomm_report_proto_rawDesc = nil
	file_reportcomm_report_proto_goTypes = nil
	file_reportcomm_report_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportSvcClient is the client API for ReportSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportSvcClient interface {
	// Creates a new report
	Create(ctx context.Context, in *CreateReportRequest, opts ...grpc.CallOption) (*CreateReportReply, error)
	// Reads an report
	Read(ctx context.Context, in *ReadReportRequest, opts ...grpc.CallOption) (*ReadReportReply, error)
	// Delete an report
	Delete(ctx context.Context, in *DeleteReportRequest, opts ...grpc.CallOption) (*DeleteReportReply, error)
	// List an report
	List(ctx context.Context, in *ListReportsRequest, opts ...grpc.CallOption) (*ListReportsReply, error)
}

type reportSvcClient struct {
	cc grpc.ClientConnInterface
}

func NewReportSvcClient(cc grpc.ClientConnInterface) ReportSvcClient {
	return &reportSvcClient{cc}
}

func (c *reportSvcClient) Create(ctx context.Context, in *CreateReportRequest, opts ...grpc.CallOption) (*CreateReportReply, error) {
	out := new(CreateReportReply)
	err := c.cc.Invoke(ctx, "/reportcomm.ReportSvc/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportSvcClient) Read(ctx context.Context, in *ReadReportRequest, opts ...grpc.CallOption) (*ReadReportReply, error) {
	out := new(ReadReportReply)
	err := c.cc.Invoke(ctx, "/reportcomm.ReportSvc/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportSvcClient) Delete(ctx context.Context, in *DeleteReportRequest, opts ...grpc.CallOption) (*DeleteReportReply, error) {
	out := new(DeleteReportReply)
	err := c.cc.Invoke(ctx, "/reportcomm.ReportSvc/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportSvcClient) List(ctx context.Context, in *ListReportsRequest, opts ...grpc.CallOption) (*ListReportsReply, error) {
	out := new(ListReportsReply)
	err := c.cc.Invoke(ctx, "/reportcomm.ReportSvc/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportSvcServer is the server API for ReportSvc service.
type ReportSvcServer interface {
	// Creates a new report
	Create(context.Context, *CreateReportRequest) (*CreateReportReply, error)
	// Reads an report
	Read(context.Context, *ReadReportRequest) (*ReadReportReply, error)
	// Delete an report
	Delete(context.Context, *DeleteReportRequest) (*DeleteReportReply, error)
	// List an report
	List(context.Context, *ListReportsRequest) (*ListReportsReply, error)
}

// UnimplementedReportSvcServer can be embedded to have forward compatible implementations.
type UnimplementedReportSvcServer struct {
}

func (*UnimplementedReportSvcServer) Create(context.Context, *CreateReportRequest) (*CreateReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedReportSvcServer) Read(context.Context, *ReadReportRequest) (*ReadReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedReportSvcServer) Delete(context.Context, *DeleteReportRequest) (*DeleteReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedReportSvcServer) List(context.Context, *ListReportsRequest) (*ListReportsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterReportSvcServer(s *grpc.Server, srv ReportSvcServer) {
	s.RegisterService(&_ReportSvc_serviceDesc, srv)
}

func _ReportSvc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportSvcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportcomm.ReportSvc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportSvcServer).Create(ctx, req.(*CreateReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportSvc_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportSvcServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportcomm.ReportSvc/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportSvcServer).Read(ctx, req.(*ReadReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportSvc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportSvcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportcomm.ReportSvc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportSvcServer).Delete(ctx, req.(*DeleteReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportSvc_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportSvcServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportcomm.ReportSvc/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportSvcServer).List(ctx, req.(*ListReportsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reportcomm.ReportSvc",
	HandlerType: (*ReportSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ReportSvc_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ReportSvc_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ReportSvc_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ReportSvc_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reportcomm/report.proto",
}
