// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: bookmastergrpc/activity.proto

package bookmastergrpc

import (
	context "context"
	ordergrpc "github.com/FrancescoIlario/usplay/pkg/services/ordergrpc"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// The request message containing the activity details
type CreateActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActTypeID string    `protobuf:"bytes,1,opt,name=ActTypeID,proto3" json:"ActTypeID,omitempty"`
	OrderID   string    `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Period    *Interval `protobuf:"bytes,3,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *CreateActivityRequest) Reset() {
	*x = CreateActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityRequest) ProtoMessage() {}

func (x *CreateActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityRequest.ProtoReflect.Descriptor instead.
func (*CreateActivityRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{0}
}

func (x *CreateActivityRequest) GetActTypeID() string {
	if x != nil {
		return x.ActTypeID
	}
	return ""
}

func (x *CreateActivityRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *CreateActivityRequest) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

// The response message containing the id of the activity
type CreateActivityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateActivityReply) Reset() {
	*x = CreateActivityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityReply) ProtoMessage() {}

func (x *CreateActivityReply) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityReply.ProtoReflect.Descriptor instead.
func (*CreateActivityReply) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{1}
}

func (x *CreateActivityReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The request message for the read request
type ReadActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ReadActivityRequest) Reset() {
	*x = ReadActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadActivityRequest) ProtoMessage() {}

func (x *ReadActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadActivityRequest.ProtoReflect.Descriptor instead.
func (*ReadActivityRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{2}
}

func (x *ReadActivityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the read request
type ReadActivityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *ReadActivityReply) Reset() {
	*x = ReadActivityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadActivityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadActivityReply) ProtoMessage() {}

func (x *ReadActivityReply) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadActivityReply.ProtoReflect.Descriptor instead.
func (*ReadActivityReply) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{3}
}

func (x *ReadActivityReply) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

// The request message for the delete request
type DeleteActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteActivityRequest) Reset() {
	*x = DeleteActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityRequest) ProtoMessage() {}

func (x *DeleteActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityRequest.ProtoReflect.Descriptor instead.
func (*DeleteActivityRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteActivityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the delete request
type DeleteActivityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteActivityReply) Reset() {
	*x = DeleteActivityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityReply) ProtoMessage() {}

func (x *DeleteActivityReply) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityReply.ProtoReflect.Descriptor instead.
func (*DeleteActivityReply) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{5}
}

// The request message for the update request
type UpdateActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ActTypeID string    `protobuf:"bytes,2,opt,name=ActTypeID,proto3" json:"ActTypeID,omitempty"`
	OrderID   string    `protobuf:"bytes,3,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Period    *Interval `protobuf:"bytes,4,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *UpdateActivityRequest) Reset() {
	*x = UpdateActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityRequest) ProtoMessage() {}

func (x *UpdateActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityRequest.ProtoReflect.Descriptor instead.
func (*UpdateActivityRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateActivityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateActivityRequest) GetActTypeID() string {
	if x != nil {
		return x.ActTypeID
	}
	return ""
}

func (x *UpdateActivityRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UpdateActivityRequest) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

// The response message to the update request.
// Returns the old values for the Activity
type UpdateActivityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateActivityReply) Reset() {
	*x = UpdateActivityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityReply) ProtoMessage() {}

func (x *UpdateActivityReply) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityReply.ProtoReflect.Descriptor instead.
func (*UpdateActivityReply) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{7}
}

// The request message for the list activities request
type ListActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterIds []string `protobuf:"bytes,1,rep,name=FilterIds,proto3" json:"FilterIds,omitempty"`
}

func (x *ListActivitiesRequest) Reset() {
	*x = ListActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesRequest) ProtoMessage() {}

func (x *ListActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesRequest.ProtoReflect.Descriptor instead.
func (*ListActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{8}
}

func (x *ListActivitiesRequest) GetFilterIds() []string {
	if x != nil {
		return x.FilterIds
	}
	return nil
}

type ListInIntervalActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period *Interval `protobuf:"bytes,1,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *ListInIntervalActivitiesRequest) Reset() {
	*x = ListInIntervalActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInIntervalActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInIntervalActivitiesRequest) ProtoMessage() {}

func (x *ListInIntervalActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInIntervalActivitiesRequest.ProtoReflect.Descriptor instead.
func (*ListInIntervalActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{9}
}

func (x *ListInIntervalActivitiesRequest) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

// The response message to the list activities request.
type ListActivitiesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*Activity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
}

func (x *ListActivitiesReply) Reset() {
	*x = ListActivitiesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitiesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesReply) ProtoMessage() {}

func (x *ListActivitiesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesReply.ProtoReflect.Descriptor instead.
func (*ListActivitiesReply) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{10}
}

func (x *ListActivitiesReply) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ActType      *ActivityType        `protobuf:"bytes,2,opt,name=ActType,proto3" json:"ActType,omitempty"`
	CreationTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	Order        *ordergrpc.Order     `protobuf:"bytes,4,opt,name=Order,proto3" json:"Order,omitempty"`
	Period       *Interval            `protobuf:"bytes,5,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{11}
}

func (x *Activity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Activity) GetActType() *ActivityType {
	if x != nil {
		return x.ActType
	}
	return nil
}

func (x *Activity) GetCreationTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *Activity) GetOrder() *ordergrpc.Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Activity) GetPeriod() *Interval {
	if x != nil {
		return x.Period
	}
	return nil
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamp.Timestamp `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmastergrpc_activity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_bookmastergrpc_activity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_bookmastergrpc_activity_proto_rawDescGZIP(), []int{12}
}

func (x *Interval) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Interval) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

var File_bookmastergrpc_activity_proto protoreflect.FileDescriptor

var file_bookmastergrpc_activity_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x25,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x11,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x06, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x35, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x4f,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0xec, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x41, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x41, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x66,
	0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x54, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x54, 0x6f, 0x32, 0xa7, 0x04, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x76, 0x63, 0x12, 0x56, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x25, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x41, 0x48, 0x03, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x63, 0x6f, 0x49, 0x6c, 0x61, 0x72, 0x69, 0x6f,
	0x2f, 0x75, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bookmastergrpc_activity_proto_rawDescOnce sync.Once
	file_bookmastergrpc_activity_proto_rawDescData = file_bookmastergrpc_activity_proto_rawDesc
)

func file_bookmastergrpc_activity_proto_rawDescGZIP() []byte {
	file_bookmastergrpc_activity_proto_rawDescOnce.Do(func() {
		file_bookmastergrpc_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_bookmastergrpc_activity_proto_rawDescData)
	})
	return file_bookmastergrpc_activity_proto_rawDescData
}

var file_bookmastergrpc_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_bookmastergrpc_activity_proto_goTypes = []interface{}{
	(*CreateActivityRequest)(nil),           // 0: bookmastergrpc.CreateActivityRequest
	(*CreateActivityReply)(nil),             // 1: bookmastergrpc.CreateActivityReply
	(*ReadActivityRequest)(nil),             // 2: bookmastergrpc.ReadActivityRequest
	(*ReadActivityReply)(nil),               // 3: bookmastergrpc.ReadActivityReply
	(*DeleteActivityRequest)(nil),           // 4: bookmastergrpc.DeleteActivityRequest
	(*DeleteActivityReply)(nil),             // 5: bookmastergrpc.DeleteActivityReply
	(*UpdateActivityRequest)(nil),           // 6: bookmastergrpc.UpdateActivityRequest
	(*UpdateActivityReply)(nil),             // 7: bookmastergrpc.UpdateActivityReply
	(*ListActivitiesRequest)(nil),           // 8: bookmastergrpc.ListActivitiesRequest
	(*ListInIntervalActivitiesRequest)(nil), // 9: bookmastergrpc.ListInIntervalActivitiesRequest
	(*ListActivitiesReply)(nil),             // 10: bookmastergrpc.ListActivitiesReply
	(*Activity)(nil),                        // 11: bookmastergrpc.Activity
	(*Interval)(nil),                        // 12: bookmastergrpc.Interval
	(*ActivityType)(nil),                    // 13: bookmastergrpc.ActivityType
	(*timestamp.Timestamp)(nil),             // 14: google.protobuf.Timestamp
	(*ordergrpc.Order)(nil),                 // 15: ordergrpc.Order
}
var file_bookmastergrpc_activity_proto_depIdxs = []int32{
	12, // 0: bookmastergrpc.CreateActivityRequest.Period:type_name -> bookmastergrpc.Interval
	11, // 1: bookmastergrpc.ReadActivityReply.activity:type_name -> bookmastergrpc.Activity
	12, // 2: bookmastergrpc.UpdateActivityRequest.Period:type_name -> bookmastergrpc.Interval
	12, // 3: bookmastergrpc.ListInIntervalActivitiesRequest.Period:type_name -> bookmastergrpc.Interval
	11, // 4: bookmastergrpc.ListActivitiesReply.activities:type_name -> bookmastergrpc.Activity
	13, // 5: bookmastergrpc.Activity.ActType:type_name -> bookmastergrpc.ActivityType
	14, // 6: bookmastergrpc.Activity.CreationTime:type_name -> google.protobuf.Timestamp
	15, // 7: bookmastergrpc.Activity.Order:type_name -> ordergrpc.Order
	12, // 8: bookmastergrpc.Activity.Period:type_name -> bookmastergrpc.Interval
	14, // 9: bookmastergrpc.Interval.From:type_name -> google.protobuf.Timestamp
	14, // 10: bookmastergrpc.Interval.To:type_name -> google.protobuf.Timestamp
	0,  // 11: bookmastergrpc.ActivitySvc.Create:input_type -> bookmastergrpc.CreateActivityRequest
	2,  // 12: bookmastergrpc.ActivitySvc.Read:input_type -> bookmastergrpc.ReadActivityRequest
	4,  // 13: bookmastergrpc.ActivitySvc.Delete:input_type -> bookmastergrpc.DeleteActivityRequest
	6,  // 14: bookmastergrpc.ActivitySvc.Update:input_type -> bookmastergrpc.UpdateActivityRequest
	8,  // 15: bookmastergrpc.ActivitySvc.List:input_type -> bookmastergrpc.ListActivitiesRequest
	9,  // 16: bookmastergrpc.ActivitySvc.ListInInterval:input_type -> bookmastergrpc.ListInIntervalActivitiesRequest
	1,  // 17: bookmastergrpc.ActivitySvc.Create:output_type -> bookmastergrpc.CreateActivityReply
	3,  // 18: bookmastergrpc.ActivitySvc.Read:output_type -> bookmastergrpc.ReadActivityReply
	5,  // 19: bookmastergrpc.ActivitySvc.Delete:output_type -> bookmastergrpc.DeleteActivityReply
	7,  // 20: bookmastergrpc.ActivitySvc.Update:output_type -> bookmastergrpc.UpdateActivityReply
	10, // 21: bookmastergrpc.ActivitySvc.List:output_type -> bookmastergrpc.ListActivitiesReply
	10, // 22: bookmastergrpc.ActivitySvc.ListInInterval:output_type -> bookmastergrpc.ListActivitiesReply
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_bookmastergrpc_activity_proto_init() }
func file_bookmastergrpc_activity_proto_init() {
	if File_bookmastergrpc_activity_proto != nil {
		return
	}
	file_bookmastergrpc_activitytype_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bookmastergrpc_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadActivityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInIntervalActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitiesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmastergrpc_activity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bookmastergrpc_activity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bookmastergrpc_activity_proto_goTypes,
		DependencyIndexes: file_bookmastergrpc_activity_proto_depIdxs,
		MessageInfos:      file_bookmastergrpc_activity_proto_msgTypes,
	}.Build()
	File_bookmastergrpc_activity_proto = out.File
	file_bookmastergrpc_activity_proto_rawDesc = nil
	file_bookmastergrpc_activity_proto_goTypes = nil
	file_bookmastergrpc_activity_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ActivitySvcClient is the client API for ActivitySvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivitySvcClient interface {
	// Creates a new activity
	Create(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityReply, error)
	// Reads an activity
	Read(ctx context.Context, in *ReadActivityRequest, opts ...grpc.CallOption) (*ReadActivityReply, error)
	// Delete an activity
	Delete(ctx context.Context, in *DeleteActivityRequest, opts ...grpc.CallOption) (*DeleteActivityReply, error)
	// Update an activity
	Update(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityReply, error)
	// List an activity
	List(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesReply, error)
	// List an activity
	ListInInterval(ctx context.Context, in *ListInIntervalActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesReply, error)
}

type activitySvcClient struct {
	cc grpc.ClientConnInterface
}

func NewActivitySvcClient(cc grpc.ClientConnInterface) ActivitySvcClient {
	return &activitySvcClient{cc}
}

func (c *activitySvcClient) Create(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityReply, error) {
	out := new(CreateActivityReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitySvcClient) Read(ctx context.Context, in *ReadActivityRequest, opts ...grpc.CallOption) (*ReadActivityReply, error) {
	out := new(ReadActivityReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitySvcClient) Delete(ctx context.Context, in *DeleteActivityRequest, opts ...grpc.CallOption) (*DeleteActivityReply, error) {
	out := new(DeleteActivityReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitySvcClient) Update(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityReply, error) {
	out := new(UpdateActivityReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitySvcClient) List(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesReply, error) {
	out := new(ListActivitiesReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitySvcClient) ListInInterval(ctx context.Context, in *ListInIntervalActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesReply, error) {
	out := new(ListActivitiesReply)
	err := c.cc.Invoke(ctx, "/bookmastergrpc.ActivitySvc/ListInInterval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivitySvcServer is the server API for ActivitySvc service.
type ActivitySvcServer interface {
	// Creates a new activity
	Create(context.Context, *CreateActivityRequest) (*CreateActivityReply, error)
	// Reads an activity
	Read(context.Context, *ReadActivityRequest) (*ReadActivityReply, error)
	// Delete an activity
	Delete(context.Context, *DeleteActivityRequest) (*DeleteActivityReply, error)
	// Update an activity
	Update(context.Context, *UpdateActivityRequest) (*UpdateActivityReply, error)
	// List an activity
	List(context.Context, *ListActivitiesRequest) (*ListActivitiesReply, error)
	// List an activity
	ListInInterval(context.Context, *ListInIntervalActivitiesRequest) (*ListActivitiesReply, error)
}

// UnimplementedActivitySvcServer can be embedded to have forward compatible implementations.
type UnimplementedActivitySvcServer struct {
}

func (*UnimplementedActivitySvcServer) Create(context.Context, *CreateActivityRequest) (*CreateActivityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedActivitySvcServer) Read(context.Context, *ReadActivityRequest) (*ReadActivityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedActivitySvcServer) Delete(context.Context, *DeleteActivityRequest) (*DeleteActivityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedActivitySvcServer) Update(context.Context, *UpdateActivityRequest) (*UpdateActivityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedActivitySvcServer) List(context.Context, *ListActivitiesRequest) (*ListActivitiesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedActivitySvcServer) ListInInterval(context.Context, *ListInIntervalActivitiesRequest) (*ListActivitiesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInInterval not implemented")
}

func RegisterActivitySvcServer(s *grpc.Server, srv ActivitySvcServer) {
	s.RegisterService(&_ActivitySvc_serviceDesc, srv)
}

func _ActivitySvc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).Create(ctx, req.(*CreateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivitySvc_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).Read(ctx, req.(*ReadActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivitySvc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).Delete(ctx, req.(*DeleteActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivitySvc_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).Update(ctx, req.(*UpdateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivitySvc_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActivitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).List(ctx, req.(*ListActivitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivitySvc_ListInInterval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInIntervalActivitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitySvcServer).ListInInterval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmastergrpc.ActivitySvc/ListInInterval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitySvcServer).ListInInterval(ctx, req.(*ListInIntervalActivitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivitySvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bookmastergrpc.ActivitySvc",
	HandlerType: (*ActivitySvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ActivitySvc_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ActivitySvc_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ActivitySvc_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ActivitySvc_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ActivitySvc_List_Handler,
		},
		{
			MethodName: "ListInInterval",
			Handler:    _ActivitySvc_ListInInterval_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bookmastergrpc/activity.proto",
}
