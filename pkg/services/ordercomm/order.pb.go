// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ordercomm/order.proto

package ordercomm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the order details
type CreateOrderRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderRequest) Reset()         { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()    {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{0}
}

func (m *CreateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderRequest.Unmarshal(m, b)
}
func (m *CreateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderRequest.Merge(m, src)
}
func (m *CreateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrderRequest.Size(m)
}
func (m *CreateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderRequest proto.InternalMessageInfo

func (m *CreateOrderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateOrderRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CreateOrderRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// The response message containing the id of the order
type CreateOrderReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderReply) Reset()         { *m = CreateOrderReply{} }
func (m *CreateOrderReply) String() string { return proto.CompactTextString(m) }
func (*CreateOrderReply) ProtoMessage()    {}
func (*CreateOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{1}
}

func (m *CreateOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderReply.Unmarshal(m, b)
}
func (m *CreateOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderReply.Marshal(b, m, deterministic)
}
func (m *CreateOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderReply.Merge(m, src)
}
func (m *CreateOrderReply) XXX_Size() int {
	return xxx_messageInfo_CreateOrderReply.Size(m)
}
func (m *CreateOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderReply proto.InternalMessageInfo

func (m *CreateOrderReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// The request message for the read request
type ReadOrderRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadOrderRequest) Reset()         { *m = ReadOrderRequest{} }
func (m *ReadOrderRequest) String() string { return proto.CompactTextString(m) }
func (*ReadOrderRequest) ProtoMessage()    {}
func (*ReadOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{2}
}

func (m *ReadOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOrderRequest.Unmarshal(m, b)
}
func (m *ReadOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOrderRequest.Marshal(b, m, deterministic)
}
func (m *ReadOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOrderRequest.Merge(m, src)
}
func (m *ReadOrderRequest) XXX_Size() int {
	return xxx_messageInfo_ReadOrderRequest.Size(m)
}
func (m *ReadOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOrderRequest proto.InternalMessageInfo

func (m *ReadOrderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// The response message to the read request
type ReadOrderReply struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadOrderReply) Reset()         { *m = ReadOrderReply{} }
func (m *ReadOrderReply) String() string { return proto.CompactTextString(m) }
func (*ReadOrderReply) ProtoMessage()    {}
func (*ReadOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{3}
}

func (m *ReadOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOrderReply.Unmarshal(m, b)
}
func (m *ReadOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOrderReply.Marshal(b, m, deterministic)
}
func (m *ReadOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOrderReply.Merge(m, src)
}
func (m *ReadOrderReply) XXX_Size() int {
	return xxx_messageInfo_ReadOrderReply.Size(m)
}
func (m *ReadOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOrderReply proto.InternalMessageInfo

func (m *ReadOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// The request message for the exists request
type ExistOrderRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistOrderRequest) Reset()         { *m = ExistOrderRequest{} }
func (m *ExistOrderRequest) String() string { return proto.CompactTextString(m) }
func (*ExistOrderRequest) ProtoMessage()    {}
func (*ExistOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{4}
}

func (m *ExistOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistOrderRequest.Unmarshal(m, b)
}
func (m *ExistOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistOrderRequest.Marshal(b, m, deterministic)
}
func (m *ExistOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistOrderRequest.Merge(m, src)
}
func (m *ExistOrderRequest) XXX_Size() int {
	return xxx_messageInfo_ExistOrderRequest.Size(m)
}
func (m *ExistOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistOrderRequest proto.InternalMessageInfo

func (m *ExistOrderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// The response message to the exists request
type ExistOrderReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistOrderReply) Reset()         { *m = ExistOrderReply{} }
func (m *ExistOrderReply) String() string { return proto.CompactTextString(m) }
func (*ExistOrderReply) ProtoMessage()    {}
func (*ExistOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{5}
}

func (m *ExistOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistOrderReply.Unmarshal(m, b)
}
func (m *ExistOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistOrderReply.Marshal(b, m, deterministic)
}
func (m *ExistOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistOrderReply.Merge(m, src)
}
func (m *ExistOrderReply) XXX_Size() int {
	return xxx_messageInfo_ExistOrderReply.Size(m)
}
func (m *ExistOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_ExistOrderReply proto.InternalMessageInfo

func (m *ExistOrderReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

// The request message for the delete request
type DeleteOrderRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOrderRequest) Reset()         { *m = DeleteOrderRequest{} }
func (m *DeleteOrderRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOrderRequest) ProtoMessage()    {}
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{6}
}

func (m *DeleteOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOrderRequest.Unmarshal(m, b)
}
func (m *DeleteOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOrderRequest.Marshal(b, m, deterministic)
}
func (m *DeleteOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOrderRequest.Merge(m, src)
}
func (m *DeleteOrderRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteOrderRequest.Size(m)
}
func (m *DeleteOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOrderRequest proto.InternalMessageInfo

func (m *DeleteOrderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// The response message to the delete request
type DeleteOrderReply struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOrderReply) Reset()         { *m = DeleteOrderReply{} }
func (m *DeleteOrderReply) String() string { return proto.CompactTextString(m) }
func (*DeleteOrderReply) ProtoMessage()    {}
func (*DeleteOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{7}
}

func (m *DeleteOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOrderReply.Unmarshal(m, b)
}
func (m *DeleteOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOrderReply.Marshal(b, m, deterministic)
}
func (m *DeleteOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOrderReply.Merge(m, src)
}
func (m *DeleteOrderReply) XXX_Size() int {
	return xxx_messageInfo_DeleteOrderReply.Size(m)
}
func (m *DeleteOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOrderReply proto.InternalMessageInfo

func (m *DeleteOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// The request message for the update request
type UpdateOrderRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOrderRequest) Reset()         { *m = UpdateOrderRequest{} }
func (m *UpdateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderRequest) ProtoMessage()    {}
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{8}
}

func (m *UpdateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderRequest.Unmarshal(m, b)
}
func (m *UpdateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderRequest.Merge(m, src)
}
func (m *UpdateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderRequest.Size(m)
}
func (m *UpdateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderRequest proto.InternalMessageInfo

func (m *UpdateOrderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateOrderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateOrderRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateOrderRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// The response message to the update request.
// Returns the old values for the Order
type UpdateOrderReply struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOrderReply) Reset()         { *m = UpdateOrderReply{} }
func (m *UpdateOrderReply) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderReply) ProtoMessage()    {}
func (*UpdateOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{9}
}

func (m *UpdateOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderReply.Unmarshal(m, b)
}
func (m *UpdateOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderReply.Marshal(b, m, deterministic)
}
func (m *UpdateOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderReply.Merge(m, src)
}
func (m *UpdateOrderReply) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderReply.Size(m)
}
func (m *UpdateOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderReply proto.InternalMessageInfo

func (m *UpdateOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// The request message for the list orders request
type ListOrdersRequest struct {
	FilterIds            []string `protobuf:"bytes,1,rep,name=FilterIds,proto3" json:"FilterIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersRequest) Reset()         { *m = ListOrdersRequest{} }
func (m *ListOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrdersRequest) ProtoMessage()    {}
func (*ListOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{10}
}

func (m *ListOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersRequest.Unmarshal(m, b)
}
func (m *ListOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersRequest.Marshal(b, m, deterministic)
}
func (m *ListOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersRequest.Merge(m, src)
}
func (m *ListOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrdersRequest.Size(m)
}
func (m *ListOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersRequest proto.InternalMessageInfo

func (m *ListOrdersRequest) GetFilterIds() []string {
	if m != nil {
		return m.FilterIds
	}
	return nil
}

// The response message to the list orders request.
type ListOrdersReply struct {
	Orders               []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersReply) Reset()         { *m = ListOrdersReply{} }
func (m *ListOrdersReply) String() string { return proto.CompactTextString(m) }
func (*ListOrdersReply) ProtoMessage()    {}
func (*ListOrdersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{11}
}

func (m *ListOrdersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersReply.Unmarshal(m, b)
}
func (m *ListOrdersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersReply.Marshal(b, m, deterministic)
}
func (m *ListOrdersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersReply.Merge(m, src)
}
func (m *ListOrdersReply) XXX_Size() int {
	return xxx_messageInfo_ListOrdersReply.Size(m)
}
func (m *ListOrdersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersReply proto.InternalMessageInfo

func (m *ListOrdersReply) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type Order struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_972d9d7dd8a32892, []int{12}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateOrderRequest)(nil), "ordercomm.CreateOrderRequest")
	proto.RegisterType((*CreateOrderReply)(nil), "ordercomm.CreateOrderReply")
	proto.RegisterType((*ReadOrderRequest)(nil), "ordercomm.ReadOrderRequest")
	proto.RegisterType((*ReadOrderReply)(nil), "ordercomm.ReadOrderReply")
	proto.RegisterType((*ExistOrderRequest)(nil), "ordercomm.ExistOrderRequest")
	proto.RegisterType((*ExistOrderReply)(nil), "ordercomm.ExistOrderReply")
	proto.RegisterType((*DeleteOrderRequest)(nil), "ordercomm.DeleteOrderRequest")
	proto.RegisterType((*DeleteOrderReply)(nil), "ordercomm.DeleteOrderReply")
	proto.RegisterType((*UpdateOrderRequest)(nil), "ordercomm.UpdateOrderRequest")
	proto.RegisterType((*UpdateOrderReply)(nil), "ordercomm.UpdateOrderReply")
	proto.RegisterType((*ListOrdersRequest)(nil), "ordercomm.ListOrdersRequest")
	proto.RegisterType((*ListOrdersReply)(nil), "ordercomm.ListOrdersReply")
	proto.RegisterType((*Order)(nil), "ordercomm.Order")
}

func init() { proto.RegisterFile("ordercomm/order.proto", fileDescriptor_972d9d7dd8a32892) }

var fileDescriptor_972d9d7dd8a32892 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0xde, 0x6e, 0x76, 0x43, 0xf7, 0x15, 0xda, 0xed, 0x80, 0xb2, 0xae, 0x15, 0xca, 0x28, 0xb2,
	0x5e, 0x12, 0xac, 0x97, 0x52, 0x3d, 0x48, 0xb7, 0x06, 0x03, 0x45, 0x21, 0xe2, 0xc5, 0x83, 0x30,
	0x4d, 0x1e, 0x35, 0x98, 0xec, 0xc4, 0x99, 0x6c, 0x71, 0xff, 0x28, 0xff, 0x47, 0x99, 0x99, 0x6d,
	0xcc, 0x4c, 0x76, 0x0b, 0x7b, 0xf0, 0xf6, 0xf2, 0xbd, 0x2f, 0xdf, 0xfb, 0xf5, 0x25, 0xf0, 0x88,
	0x8b, 0x0c, 0x45, 0xca, 0xcb, 0x32, 0xd4, 0x51, 0x50, 0x09, 0x5e, 0x73, 0x32, 0x6a, 0x60, 0xfa,
	0x1d, 0xc8, 0x5c, 0x20, 0xab, 0xf1, 0xb3, 0x82, 0x12, 0xfc, 0xb5, 0x44, 0x59, 0x13, 0x02, 0x83,
	0x4f, 0xac, 0xc4, 0xc9, 0xde, 0xe9, 0xde, 0x6c, 0x94, 0xe8, 0x58, 0x61, 0x73, 0x9e, 0xe1, 0xa4,
	0x6f, 0x30, 0x15, 0x93, 0x53, 0x38, 0xb8, 0x42, 0x99, 0x8a, 0xbc, 0xaa, 0x73, 0xbe, 0x98, 0x78,
	0x3a, 0xd5, 0x86, 0x28, 0x85, 0xb1, 0xa5, 0x5f, 0x15, 0x2b, 0x72, 0x08, 0xfd, 0x38, 0x5b, 0x6b,
	0xf7, 0xe3, 0x4c, 0x71, 0x12, 0x64, 0x99, 0xd5, 0x81, 0xcb, 0x39, 0x87, 0xc3, 0x16, 0x47, 0xa9,
	0xbc, 0x84, 0xa1, 0x1e, 0x43, 0x93, 0x0e, 0xce, 0xc6, 0x41, 0x33, 0x54, 0x60, 0x58, 0x26, 0x4d,
	0x9f, 0xc3, 0xf1, 0x87, 0xdf, 0xb9, 0xac, 0x1f, 0x94, 0x7f, 0x05, 0x47, 0x6d, 0x92, 0xd2, 0x7f,
	0x0c, 0x3e, 0x2a, 0x48, 0x6a, 0xda, 0x7e, 0xb2, 0x7e, 0xa2, 0x2f, 0x80, 0x5c, 0x61, 0x81, 0xce,
	0xc6, 0x5c, 0xc1, 0x0b, 0x18, 0x5b, 0xac, 0x5d, 0x3a, 0x5e, 0x00, 0xf9, 0x5a, 0x65, 0xec, 0xe1,
	0x0a, 0xcd, 0x8d, 0xfa, 0x1b, 0x6e, 0xe4, 0x6d, 0xbf, 0xd1, 0xa0, 0x7b, 0xa3, 0x0b, 0x18, 0x5b,
	0xf5, 0x76, 0xe9, 0xf5, 0x35, 0x1c, 0x5f, 0xdf, 0xef, 0x4d, 0xde, 0xb7, 0x7a, 0x02, 0xa3, 0x28,
	0x2f, 0x6a, 0x14, 0x71, 0xa6, 0xb6, 0xe7, 0xcd, 0x46, 0xc9, 0x3f, 0x80, 0xbe, 0x85, 0xa3, 0xf6,
	0x2b, 0xaa, 0xda, 0x0c, 0x7c, 0x2d, 0x67, 0xd8, 0x9b, 0xca, 0xad, 0xf3, 0x94, 0xc1, 0x50, 0x03,
	0xff, 0x6f, 0x1d, 0x67, 0x7f, 0x3c, 0xd8, 0xd7, 0x35, 0xbe, 0xdc, 0xa5, 0x24, 0x02, 0xdf, 0xf8,
	0x97, 0x3c, 0x6b, 0xf5, 0xd4, 0xfd, 0x64, 0xa6, 0x4f, 0xb7, 0xa5, 0xab, 0x62, 0x45, 0x7b, 0xe4,
	0x3d, 0x0c, 0x94, 0x7f, 0x49, 0x9b, 0xe6, 0x9a, 0x7e, 0xfa, 0x64, 0x73, 0xd2, 0x28, 0xcc, 0x61,
	0xa8, 0x2d, 0x4a, 0x4e, 0x5a, 0xac, 0x8e, 0xb3, 0xa7, 0xd3, 0x2d, 0x59, 0x23, 0x12, 0x81, 0x6f,
	0x6c, 0x69, 0x8d, 0xd3, 0xf5, 0xb3, 0x35, 0x8e, 0x6b, 0x64, 0xa3, 0x63, 0x2c, 0x63, 0xe9, 0x74,
	0x5d, 0x6b, 0xe9, 0xb8, 0x26, 0xa3, 0x3d, 0x72, 0x09, 0x83, 0x6b, 0x77, 0xa6, 0x8e, 0x9f, 0xac,
	0x99, 0x1c, 0xeb, 0xd0, 0xde, 0xe5, 0xbb, 0x8f, 0xde, 0xb7, 0xf3, 0xdb, 0xbc, 0xfe, 0xb1, 0xbc,
	0x09, 0x52, 0x5e, 0x86, 0x91, 0x60, 0x8b, 0x14, 0x65, 0xca, 0xe3, 0x82, 0x89, 0x9c, 0x87, 0x4b,
	0x59, 0x15, 0x6c, 0x15, 0x56, 0x3f, 0x6f, 0x43, 0x89, 0xe2, 0x2e, 0x4f, 0x51, 0x86, 0x8d, 0xde,
	0x8d, 0xaf, 0x7f, 0x89, 0x6f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x24, 0x19, 0x8f, 0xe9, 0x2b,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderSvcClient is the client API for OrderSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderSvcClient interface {
	// Creates a new order
	Create(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error)
	// Reads an order
	Read(ctx context.Context, in *ReadOrderRequest, opts ...grpc.CallOption) (*ReadOrderReply, error)
	// Exists an order
	Exist(ctx context.Context, in *ExistOrderRequest, opts ...grpc.CallOption) (*ExistOrderReply, error)
	// Delete an order
	Delete(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*DeleteOrderReply, error)
	// Update an order
	Update(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderReply, error)
	// List an order
	List(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersReply, error)
}

type orderSvcClient struct {
	cc *grpc.ClientConn
}

func NewOrderSvcClient(cc *grpc.ClientConn) OrderSvcClient {
	return &orderSvcClient{cc}
}

func (c *orderSvcClient) Create(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error) {
	out := new(CreateOrderReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) Read(ctx context.Context, in *ReadOrderRequest, opts ...grpc.CallOption) (*ReadOrderReply, error) {
	out := new(ReadOrderReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) Exist(ctx context.Context, in *ExistOrderRequest, opts ...grpc.CallOption) (*ExistOrderReply, error) {
	out := new(ExistOrderReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) Delete(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*DeleteOrderReply, error) {
	out := new(DeleteOrderReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) Update(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderReply, error) {
	out := new(UpdateOrderReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) List(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersReply, error) {
	out := new(ListOrdersReply)
	err := c.cc.Invoke(ctx, "/ordercomm.OrderSvc/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderSvcServer is the server API for OrderSvc service.
type OrderSvcServer interface {
	// Creates a new order
	Create(context.Context, *CreateOrderRequest) (*CreateOrderReply, error)
	// Reads an order
	Read(context.Context, *ReadOrderRequest) (*ReadOrderReply, error)
	// Exists an order
	Exist(context.Context, *ExistOrderRequest) (*ExistOrderReply, error)
	// Delete an order
	Delete(context.Context, *DeleteOrderRequest) (*DeleteOrderReply, error)
	// Update an order
	Update(context.Context, *UpdateOrderRequest) (*UpdateOrderReply, error)
	// List an order
	List(context.Context, *ListOrdersRequest) (*ListOrdersReply, error)
}

// UnimplementedOrderSvcServer can be embedded to have forward compatible implementations.
type UnimplementedOrderSvcServer struct {
}

func (*UnimplementedOrderSvcServer) Create(ctx context.Context, req *CreateOrderRequest) (*CreateOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOrderSvcServer) Read(ctx context.Context, req *ReadOrderRequest) (*ReadOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedOrderSvcServer) Exist(ctx context.Context, req *ExistOrderRequest) (*ExistOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedOrderSvcServer) Delete(ctx context.Context, req *DeleteOrderRequest) (*DeleteOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedOrderSvcServer) Update(ctx context.Context, req *UpdateOrderRequest) (*UpdateOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedOrderSvcServer) List(ctx context.Context, req *ListOrdersRequest) (*ListOrdersReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterOrderSvcServer(s *grpc.Server, srv OrderSvcServer) {
	s.RegisterService(&_OrderSvc_serviceDesc, srv)
}

func _OrderSvc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Create(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Read(ctx, req.(*ReadOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Exist(ctx, req.(*ExistOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Delete(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Update(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ordercomm.OrderSvc/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).List(ctx, req.(*ListOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ordercomm.OrderSvc",
	HandlerType: (*OrderSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OrderSvc_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _OrderSvc_Read_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _OrderSvc_Exist_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OrderSvc_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OrderSvc_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _OrderSvc_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordercomm/order.proto",
}
