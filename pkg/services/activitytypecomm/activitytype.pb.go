// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.6.1
// source: activitytypecomm/activitytype.proto

package activitytypecomm

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// The request message containing the ActivityType details
type CreateActivityTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *CreateActivityTypeRequest) Reset() {
	*x = CreateActivityTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityTypeRequest) ProtoMessage() {}

func (x *CreateActivityTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateActivityTypeRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{0}
}

func (x *CreateActivityTypeRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateActivityTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateActivityTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// The response message containing the id of the ActivityType
type CreateActivityTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateActivityTypeReply) Reset() {
	*x = CreateActivityTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityTypeReply) ProtoMessage() {}

func (x *CreateActivityTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityTypeReply.ProtoReflect.Descriptor instead.
func (*CreateActivityTypeReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{1}
}

func (x *CreateActivityTypeReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The request message for the read request
type ExistActivityTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ExistActivityTypeRequest) Reset() {
	*x = ExistActivityTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistActivityTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistActivityTypeRequest) ProtoMessage() {}

func (x *ExistActivityTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistActivityTypeRequest.ProtoReflect.Descriptor instead.
func (*ExistActivityTypeRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{2}
}

func (x *ExistActivityTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the read request
type ExistActivityTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistActivityTypeReply) Reset() {
	*x = ExistActivityTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistActivityTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistActivityTypeReply) ProtoMessage() {}

func (x *ExistActivityTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistActivityTypeReply.ProtoReflect.Descriptor instead.
func (*ExistActivityTypeReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{3}
}

func (x *ExistActivityTypeReply) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// The request message for the read request
type ReadActivityTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ReadActivityTypeRequest) Reset() {
	*x = ReadActivityTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadActivityTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadActivityTypeRequest) ProtoMessage() {}

func (x *ReadActivityTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadActivityTypeRequest.ProtoReflect.Descriptor instead.
func (*ReadActivityTypeRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{4}
}

func (x *ReadActivityTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the read request
type ReadActivityTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityType *ActivityType `protobuf:"bytes,1,opt,name=ActivityType,proto3" json:"ActivityType,omitempty"`
}

func (x *ReadActivityTypeReply) Reset() {
	*x = ReadActivityTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadActivityTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadActivityTypeReply) ProtoMessage() {}

func (x *ReadActivityTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadActivityTypeReply.ProtoReflect.Descriptor instead.
func (*ReadActivityTypeReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{5}
}

func (x *ReadActivityTypeReply) GetActivityType() *ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return nil
}

// The request message for the delete request
type DeleteActivityTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteActivityTypeRequest) Reset() {
	*x = DeleteActivityTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityTypeRequest) ProtoMessage() {}

func (x *DeleteActivityTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteActivityTypeRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteActivityTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message to the delete request
type DeleteActivityTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteActivityTypeReply) Reset() {
	*x = DeleteActivityTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityTypeReply) ProtoMessage() {}

func (x *DeleteActivityTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityTypeReply.ProtoReflect.Descriptor instead.
func (*DeleteActivityTypeReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{7}
}

// The request message for the update request
type UpdateActivityTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Code        int32  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *UpdateActivityTypeRequest) Reset() {
	*x = UpdateActivityTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityTypeRequest) ProtoMessage() {}

func (x *UpdateActivityTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateActivityTypeRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateActivityTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateActivityTypeRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateActivityTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateActivityTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// The response message to the update requests
type UpdateActivityTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateActivityTypeReply) Reset() {
	*x = UpdateActivityTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivityTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityTypeReply) ProtoMessage() {}

func (x *UpdateActivityTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityTypeReply.ProtoReflect.Descriptor instead.
func (*UpdateActivityTypeReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{9}
}

// The request message for the list ActivityTypes request
type ListActivityTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterIds []string `protobuf:"bytes,1,rep,name=FilterIds,proto3" json:"FilterIds,omitempty"`
}

func (x *ListActivityTypesRequest) Reset() {
	*x = ListActivityTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivityTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivityTypesRequest) ProtoMessage() {}

func (x *ListActivityTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivityTypesRequest.ProtoReflect.Descriptor instead.
func (*ListActivityTypesRequest) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{10}
}

func (x *ListActivityTypesRequest) GetFilterIds() []string {
	if x != nil {
		return x.FilterIds
	}
	return nil
}

// The response message to the list ActivityTypes request.
type ListActivityTypesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityTypes []*ActivityType `protobuf:"bytes,1,rep,name=ActivityTypes,proto3" json:"ActivityTypes,omitempty"`
}

func (x *ListActivityTypesReply) Reset() {
	*x = ListActivityTypesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivityTypesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivityTypesReply) ProtoMessage() {}

func (x *ListActivityTypesReply) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivityTypesReply.ProtoReflect.Descriptor instead.
func (*ListActivityTypesReply) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{11}
}

func (x *ListActivityTypesReply) GetActivityTypes() []*ActivityType {
	if x != nil {
		return x.ActivityTypes
	}
	return nil
}

type ActivityType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Code        int32  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ActivityType) Reset() {
	*x = ActivityType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activitytypecomm_activitytype_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityType) ProtoMessage() {}

func (x *ActivityType) ProtoReflect() protoreflect.Message {
	mi := &file_activitytypecomm_activitytype_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityType.ProtoReflect.Descriptor instead.
func (*ActivityType) Descriptor() ([]byte, []int) {
	return file_activitytypecomm_activitytype_proto_rawDescGZIP(), []int{12}
}

func (x *ActivityType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivityType) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_activitytypecomm_activitytype_proto protoreflect.FileDescriptor

var file_activitytypecomm_activitytype_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x22, 0x65, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x75, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x38, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x5e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a,
	0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xdc, 0x04,
	0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x76,
	0x63, 0x12, 0x62, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x2a,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x29,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x43, 0x48, 0x03,
	0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x63, 0x6f, 0x49, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activitytypecomm_activitytype_proto_rawDescOnce sync.Once
	file_activitytypecomm_activitytype_proto_rawDescData = file_activitytypecomm_activitytype_proto_rawDesc
)

func file_activitytypecomm_activitytype_proto_rawDescGZIP() []byte {
	file_activitytypecomm_activitytype_proto_rawDescOnce.Do(func() {
		file_activitytypecomm_activitytype_proto_rawDescData = protoimpl.X.CompressGZIP(file_activitytypecomm_activitytype_proto_rawDescData)
	})
	return file_activitytypecomm_activitytype_proto_rawDescData
}

var file_activitytypecomm_activitytype_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_activitytypecomm_activitytype_proto_goTypes = []interface{}{
	(*CreateActivityTypeRequest)(nil), // 0: activitytypecomm.CreateActivityTypeRequest
	(*CreateActivityTypeReply)(nil),   // 1: activitytypecomm.CreateActivityTypeReply
	(*ExistActivityTypeRequest)(nil),  // 2: activitytypecomm.ExistActivityTypeRequest
	(*ExistActivityTypeReply)(nil),    // 3: activitytypecomm.ExistActivityTypeReply
	(*ReadActivityTypeRequest)(nil),   // 4: activitytypecomm.ReadActivityTypeRequest
	(*ReadActivityTypeReply)(nil),     // 5: activitytypecomm.ReadActivityTypeReply
	(*DeleteActivityTypeRequest)(nil), // 6: activitytypecomm.DeleteActivityTypeRequest
	(*DeleteActivityTypeReply)(nil),   // 7: activitytypecomm.DeleteActivityTypeReply
	(*UpdateActivityTypeRequest)(nil), // 8: activitytypecomm.UpdateActivityTypeRequest
	(*UpdateActivityTypeReply)(nil),   // 9: activitytypecomm.UpdateActivityTypeReply
	(*ListActivityTypesRequest)(nil),  // 10: activitytypecomm.ListActivityTypesRequest
	(*ListActivityTypesReply)(nil),    // 11: activitytypecomm.ListActivityTypesReply
	(*ActivityType)(nil),              // 12: activitytypecomm.ActivityType
}
var file_activitytypecomm_activitytype_proto_depIdxs = []int32{
	12, // 0: activitytypecomm.ReadActivityTypeReply.ActivityType:type_name -> activitytypecomm.ActivityType
	12, // 1: activitytypecomm.ListActivityTypesReply.ActivityTypes:type_name -> activitytypecomm.ActivityType
	0,  // 2: activitytypecomm.ActivityTypeSvc.Create:input_type -> activitytypecomm.CreateActivityTypeRequest
	2,  // 3: activitytypecomm.ActivityTypeSvc.Exist:input_type -> activitytypecomm.ExistActivityTypeRequest
	4,  // 4: activitytypecomm.ActivityTypeSvc.Read:input_type -> activitytypecomm.ReadActivityTypeRequest
	6,  // 5: activitytypecomm.ActivityTypeSvc.Delete:input_type -> activitytypecomm.DeleteActivityTypeRequest
	8,  // 6: activitytypecomm.ActivityTypeSvc.Update:input_type -> activitytypecomm.UpdateActivityTypeRequest
	10, // 7: activitytypecomm.ActivityTypeSvc.List:input_type -> activitytypecomm.ListActivityTypesRequest
	1,  // 8: activitytypecomm.ActivityTypeSvc.Create:output_type -> activitytypecomm.CreateActivityTypeReply
	3,  // 9: activitytypecomm.ActivityTypeSvc.Exist:output_type -> activitytypecomm.ExistActivityTypeReply
	5,  // 10: activitytypecomm.ActivityTypeSvc.Read:output_type -> activitytypecomm.ReadActivityTypeReply
	7,  // 11: activitytypecomm.ActivityTypeSvc.Delete:output_type -> activitytypecomm.DeleteActivityTypeReply
	9,  // 12: activitytypecomm.ActivityTypeSvc.Update:output_type -> activitytypecomm.UpdateActivityTypeReply
	11, // 13: activitytypecomm.ActivityTypeSvc.List:output_type -> activitytypecomm.ListActivityTypesReply
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_activitytypecomm_activitytype_proto_init() }
func file_activitytypecomm_activitytype_proto_init() {
	if File_activitytypecomm_activitytype_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_activitytypecomm_activitytype_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistActivityTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistActivityTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadActivityTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadActivityTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivityTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivityTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivityTypesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activitytypecomm_activitytype_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activitytypecomm_activitytype_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_activitytypecomm_activitytype_proto_goTypes,
		DependencyIndexes: file_activitytypecomm_activitytype_proto_depIdxs,
		MessageInfos:      file_activitytypecomm_activitytype_proto_msgTypes,
	}.Build()
	File_activitytypecomm_activitytype_proto = out.File
	file_activitytypecomm_activitytype_proto_rawDesc = nil
	file_activitytypecomm_activitytype_proto_goTypes = nil
	file_activitytypecomm_activitytype_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ActivityTypeSvcClient is the client API for ActivityTypeSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityTypeSvcClient interface {
	// Creates a new ActivityType
	Create(ctx context.Context, in *CreateActivityTypeRequest, opts ...grpc.CallOption) (*CreateActivityTypeReply, error)
	// Exists an activity
	Exist(ctx context.Context, in *ExistActivityTypeRequest, opts ...grpc.CallOption) (*ExistActivityTypeReply, error)
	// Reads an ActivityType
	Read(ctx context.Context, in *ReadActivityTypeRequest, opts ...grpc.CallOption) (*ReadActivityTypeReply, error)
	// Delete an ActivityType
	Delete(ctx context.Context, in *DeleteActivityTypeRequest, opts ...grpc.CallOption) (*DeleteActivityTypeReply, error)
	// Update an ActivityType
	Update(ctx context.Context, in *UpdateActivityTypeRequest, opts ...grpc.CallOption) (*UpdateActivityTypeReply, error)
	// List an ActivityType
	List(ctx context.Context, in *ListActivityTypesRequest, opts ...grpc.CallOption) (*ListActivityTypesReply, error)
}

type activityTypeSvcClient struct {
	cc grpc.ClientConnInterface
}

func NewActivityTypeSvcClient(cc grpc.ClientConnInterface) ActivityTypeSvcClient {
	return &activityTypeSvcClient{cc}
}

func (c *activityTypeSvcClient) Create(ctx context.Context, in *CreateActivityTypeRequest, opts ...grpc.CallOption) (*CreateActivityTypeReply, error) {
	out := new(CreateActivityTypeReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityTypeSvcClient) Exist(ctx context.Context, in *ExistActivityTypeRequest, opts ...grpc.CallOption) (*ExistActivityTypeReply, error) {
	out := new(ExistActivityTypeReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityTypeSvcClient) Read(ctx context.Context, in *ReadActivityTypeRequest, opts ...grpc.CallOption) (*ReadActivityTypeReply, error) {
	out := new(ReadActivityTypeReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityTypeSvcClient) Delete(ctx context.Context, in *DeleteActivityTypeRequest, opts ...grpc.CallOption) (*DeleteActivityTypeReply, error) {
	out := new(DeleteActivityTypeReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityTypeSvcClient) Update(ctx context.Context, in *UpdateActivityTypeRequest, opts ...grpc.CallOption) (*UpdateActivityTypeReply, error) {
	out := new(UpdateActivityTypeReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityTypeSvcClient) List(ctx context.Context, in *ListActivityTypesRequest, opts ...grpc.CallOption) (*ListActivityTypesReply, error) {
	out := new(ListActivityTypesReply)
	err := c.cc.Invoke(ctx, "/activitytypecomm.ActivityTypeSvc/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityTypeSvcServer is the server API for ActivityTypeSvc service.
type ActivityTypeSvcServer interface {
	// Creates a new ActivityType
	Create(context.Context, *CreateActivityTypeRequest) (*CreateActivityTypeReply, error)
	// Exists an activity
	Exist(context.Context, *ExistActivityTypeRequest) (*ExistActivityTypeReply, error)
	// Reads an ActivityType
	Read(context.Context, *ReadActivityTypeRequest) (*ReadActivityTypeReply, error)
	// Delete an ActivityType
	Delete(context.Context, *DeleteActivityTypeRequest) (*DeleteActivityTypeReply, error)
	// Update an ActivityType
	Update(context.Context, *UpdateActivityTypeRequest) (*UpdateActivityTypeReply, error)
	// List an ActivityType
	List(context.Context, *ListActivityTypesRequest) (*ListActivityTypesReply, error)
}

// UnimplementedActivityTypeSvcServer can be embedded to have forward compatible implementations.
type UnimplementedActivityTypeSvcServer struct {
}

func (*UnimplementedActivityTypeSvcServer) Create(context.Context, *CreateActivityTypeRequest) (*CreateActivityTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedActivityTypeSvcServer) Exist(context.Context, *ExistActivityTypeRequest) (*ExistActivityTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedActivityTypeSvcServer) Read(context.Context, *ReadActivityTypeRequest) (*ReadActivityTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedActivityTypeSvcServer) Delete(context.Context, *DeleteActivityTypeRequest) (*DeleteActivityTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedActivityTypeSvcServer) Update(context.Context, *UpdateActivityTypeRequest) (*UpdateActivityTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedActivityTypeSvcServer) List(context.Context, *ListActivityTypesRequest) (*ListActivityTypesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterActivityTypeSvcServer(s *grpc.Server, srv ActivityTypeSvcServer) {
	s.RegisterService(&_ActivityTypeSvc_serviceDesc, srv)
}

func _ActivityTypeSvc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).Create(ctx, req.(*CreateActivityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityTypeSvc_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistActivityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).Exist(ctx, req.(*ExistActivityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityTypeSvc_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadActivityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).Read(ctx, req.(*ReadActivityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityTypeSvc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteActivityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).Delete(ctx, req.(*DeleteActivityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityTypeSvc_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActivityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).Update(ctx, req.(*UpdateActivityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityTypeSvc_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActivityTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityTypeSvcServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/activitytypecomm.ActivityTypeSvc/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityTypeSvcServer).List(ctx, req.(*ListActivityTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityTypeSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "activitytypecomm.ActivityTypeSvc",
	HandlerType: (*ActivityTypeSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ActivityTypeSvc_Create_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _ActivityTypeSvc_Exist_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ActivityTypeSvc_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ActivityTypeSvc_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ActivityTypeSvc_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ActivityTypeSvc_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "activitytypecomm/activitytype.proto",
}
